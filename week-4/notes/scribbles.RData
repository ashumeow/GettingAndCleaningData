> ## Editing text variables
> fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
> download.file(fileUrl,destfile="./get-data/cameras.csv")
trying URL 'https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD'
Content type 'text/csv; charset=utf-8' length 9294 bytes
opened URL
downloaded 9294 bytes

> cameraData <- read.csv("./get-data/cameras.csv")
> names(cameraData)
[1] "address"      "direction"    "street"      
[4] "crossStreet"  "intersection" "Location.1"  
> tolower(names(cameraData))
[1] "address"      "direction"    "street"      
[4] "crossstreet"  "intersection" "location.1"  
> splitNames=strsplit(names(cameraData),"\\.")
> splitNames[[5]]
[1] "intersection"
> splitNames[[6]]
[1] "Location" "1"       
> mylist <- list(letters=c("A","b","c"),numbers=1:3,matrix(1:25,ncol=5))
> head(mylist)
$letters
[1] "A" "b" "c"

$numbers
[1] 1 2 3

[[3]]
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    6   11   16   21
[2,]    2    7   12   17   22
[3,]    3    8   13   18   23
[4,]    4    9   14   19   24
[5,]    5   10   15   20   25

> mylist[1]
$letters
[1] "A" "b" "c"

> mylist$letters
[1] "A" "b" "c"
> mylist[[1]]
[1] "A" "b" "c"
> splitNames[[6]][1]
[1] "Location"
> firstElement <- function(x) {x[1]}
> sapply(splitNames,firstElement)
[1] "address"      "direction"    "street"      
[4] "crossStreet"  "intersection" "Location"    
> ## peer review data
> ## check here for downloading:
> ## link -- https://github.com/ashumeow/GettingAndCleaningData/blob/master/week-3/notes/scribbles.RData#L1158
> reviews <- read.csv("./get-data/reviews.csv")
> solutions <- read.csv("./get-data/solutions.csv")
> head(reviews,2)
  id solution_id reviewer_id      start       stop
1  1           3          27 1304095698 1304095758
2  2           4          22 1304095188 1304095206
  time_left accept
1      1754      1
2      2306      1
> head(solutions,2)
  id problem_id subject_id      start       stop
1  1        156         29 1304095119 1304095169
2  2        269         25 1304095119 1304095183
  time_left answer
1      2343      B
2      2329      C
> ## fixing character vectors
> names(reviews)
[1] "id"          "solution_id" "reviewer_id"
[4] "start"       "stop"        "time_left"  
[7] "accept"     
> sub("_","",names(reviews),)
[1] "id"         "solutionid" "reviewerid"
[4] "start"      "stop"       "timeleft"  
[7] "accept"    
> testName <- "this_is_a_test"
> sub("_","",testName)
[1] "thisis_a_test"
> gsub("_","",testName)
[1] "thisisatest"
> ## finding values
> grep("Alameda",cameraData$intersection)
[1]  4  5 36
> table(grepl("Alameda",cameraData$intersection))

FALSE  TRUE 
   77     3 
> cameraData2 <- cameraData[!grepl("Alameda",cameraData$intersection),]
> grep("Alameda",cameraData$intersection,value=TRUE)
[1] "The Alameda  & 33rd St"  
[2] "E 33rd  & The Alameda"   
[3] "Harford \n & The Alameda"
> grep("JeffStreet",cameraData$intersection)
integer(0)
> length(grep("JeffStreet",cameraData$intersection))
[1] 0
> ## string functions
> install.packages("stringr")
trying URL 'http://cran.rstudio.com/bin/windows/contrib/3.1/stringr_1.0.0.zip'
Content type 'application/zip' length 82915 bytes (80 KB)
opened URL
downloaded 80 KB

package ‘stringr’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\dell\AppData\Local\Temp\RtmpmOxAyk\downloaded_packages
> library(stringr)
> nchar("Jeffrey Leek")
[1] 12
> substr("Jeffrey Leek",1,7)
[1] "Jeffrey"
> paste("Jeffrey","Leek")
[1] "Jeffrey Leek"
> paste0("Jeffrey","Leek")
[1] "JeffreyLeek"
> str_trim("Jeff     ")
[1] "Jeff"
