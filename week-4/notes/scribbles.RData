> ## Editing text variables
> fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
> download.file(fileUrl,destfile="./get-data/cameras.csv")
trying URL 'https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD'
Content type 'text/csv; charset=utf-8' length 9294 bytes
opened URL
downloaded 9294 bytes

> cameraData <- read.csv("./get-data/cameras.csv")
> names(cameraData)
[1] "address"      "direction"    "street"      
[4] "crossStreet"  "intersection" "Location.1"  
> tolower(names(cameraData))
[1] "address"      "direction"    "street"      
[4] "crossstreet"  "intersection" "location.1"  
> splitNames=strsplit(names(cameraData),"\\.")
> splitNames[[5]]
[1] "intersection"
> splitNames[[6]]
[1] "Location" "1"       
> mylist <- list(letters=c("A","b","c"),numbers=1:3,matrix(1:25,ncol=5))
> head(mylist)
$letters
[1] "A" "b" "c"

$numbers
[1] 1 2 3

[[3]]
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    6   11   16   21
[2,]    2    7   12   17   22
[3,]    3    8   13   18   23
[4,]    4    9   14   19   24
[5,]    5   10   15   20   25

> mylist[1]
$letters
[1] "A" "b" "c"

> mylist$letters
[1] "A" "b" "c"
> mylist[[1]]
[1] "A" "b" "c"
> splitNames[[6]][1]
[1] "Location"
> firstElement <- function(x) {x[1]}
> sapply(splitNames,firstElement)
[1] "address"      "direction"    "street"      
[4] "crossStreet"  "intersection" "Location"    
> ## peer review data
> ## check here for downloading:
> ## link -- https://github.com/ashumeow/GettingAndCleaningData/blob/master/week-3/notes/scribbles.RData#L1158
> reviews <- read.csv("./get-data/reviews.csv")
> solutions <- read.csv("./get-data/solutions.csv")
> head(reviews,2)
  id solution_id reviewer_id      start       stop
1  1           3          27 1304095698 1304095758
2  2           4          22 1304095188 1304095206
  time_left accept
1      1754      1
2      2306      1
> head(solutions,2)
  id problem_id subject_id      start       stop
1  1        156         29 1304095119 1304095169
2  2        269         25 1304095119 1304095183
  time_left answer
1      2343      B
2      2329      C
> ## fixing character vectors
> names(reviews)
[1] "id"          "solution_id" "reviewer_id"
[4] "start"       "stop"        "time_left"  
[7] "accept"     
> sub("_","",names(reviews),)
[1] "id"         "solutionid" "reviewerid"
[4] "start"      "stop"       "timeleft"  
[7] "accept"    
> testName <- "this_is_a_test"
> sub("_","",testName)
[1] "thisis_a_test"
> gsub("_","",testName)
[1] "thisisatest"
> ## finding values
> grep("Alameda",cameraData$intersection)
[1]  4  5 36
> table(grepl("Alameda",cameraData$intersection))

FALSE  TRUE 
   77     3 
> cameraData2 <- cameraData[!grepl("Alameda",cameraData$intersection),]
> grep("Alameda",cameraData$intersection,value=TRUE)
[1] "The Alameda  & 33rd St"  
[2] "E 33rd  & The Alameda"   
[3] "Harford \n & The Alameda"
> grep("JeffStreet",cameraData$intersection)
integer(0)
> length(grep("JeffStreet",cameraData$intersection))
[1] 0
> ## string functions
> install.packages("stringr")
trying URL 'http://cran.rstudio.com/bin/windows/contrib/3.1/stringr_1.0.0.zip'
Content type 'application/zip' length 82915 bytes (80 KB)
opened URL
downloaded 80 KB

package ‘stringr’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\dell\AppData\Local\Temp\RtmpmOxAyk\downloaded_packages
> library(stringr)
> nchar("Jeffrey Leek")
[1] 12
> substr("Jeffrey Leek",1,7)
[1] "Jeffrey"
> paste("Jeffrey","Leek")
[1] "Jeffrey Leek"
> paste0("Jeffrey","Leek")
[1] "JeffreyLeek"
> str_trim("Jeff     ")
[1] "Jeff"

> ## working with dates
> d1=date()
> d1
[1] "Tue May 26 02:31:22 2015"
> class(d1)
[1] "character"
> d2=Sys.Date()
> d2
[1] "2015-05-26"
> class(d2)
[1] "Date"
> format(d2,"%a %b %d")
[1] "Tue May 26"
> ## creating dates
> meow=c("14May1991","25Mar1990"); ig=as.Date(meow,"%d%b%Y")
> ig
[1] "1991-05-14" "1990-03-25"
> ig[1]-ig[2]
Time difference of 415 days
> as.numeric(ig[1]-ig[2])
[1] 415
> weekdays(d2)
[1] "Tuesday"
> months(d2)
[1] "May"
> julian(d2)
[1] 16581
attr(,"origin")
[1] "1970-01-01"
> install.packages("lubridate")
--- Please select a CRAN mirror for use in this session ---
also installing the dependency ‘memoise’

trying URL 'http://ftp.iitm.ac.in/cran/bin/windows/contrib/3.1/memoise_0.2.1.zip'
Content type 'application/zip' length 16846 bytes (16 KB)
opened URL
downloaded 16 KB

trying URL 'http://ftp.iitm.ac.in/cran/bin/windows/contrib/3.1/lubridate_1.3.3.zip'
Content type 'application/zip' length 666297 bytes (650 KB)
opened URL
downloaded 650 KB

package ‘memoise’ successfully unpacked and MD5 sums checked
package ‘lubridate’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Users\dell\AppData\Local\Temp\RtmpKgbiyT\downloaded_packages

> library(lubridate)
> ymd("20150415")
[1] "2015-04-15 UTC"
> mdy("05/14/2015")
[1] "2015-05-14 UTC"
> dmy("25-03-2015")
[1] "2015-03-25 UTC"
> ymd_hms("1991-05-14 20:30:00")
[1] "1991-05-14 20:30:00 UTC"
> ymd_hms("1991-05-14 20:30:00",tz="EST")
[1] "1991-05-14 20:30:00 EST"
> ?Sys.timezone
starting httpd help server ... done
> z=dmy(c("14may1991","25mar1990"))
> wday(z[1])
[1] 3
> wday(z[1],label=TRUE)
[1] Tues
Levels: Sun < Mon < Tues < Wed < Thurs < Fri < Sat
